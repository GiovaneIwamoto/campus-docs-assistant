# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: gustavo123
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: document-bot
service: ufms-document-bot  # Nome do serviço (também será utilizado nos recursos da AWS)

provider:
  name: aws
  region: us-east-1
  stage: dev
  runtime: python3.12
  iamRoleStatements:
    - Effect: Allow
      Action:
        - rekognition:SearchFacesByImage
        - rekognition:DetectFaces
        - rekognition:CreateCollection
        - rekognition:IndexFaces
        - rekognition:ListCollections
        - rekognition:DeleteCollection
        - bedrock:InvokeModel
        - polly:SynthesizeSpeech
        - lex:RecognizeText
        - lex:DeleteSession
        - lex:GetSession
        - lex:PutSession
        - s3:GetObject
        - s3:PutObject
        - dynamodb:DescribeTable
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:createTable
        - lambda:InvokeFunction
        - sqs:SendMessage
        - sqs:GetQueueUrl
      Resource: "*"

functions:
  telegramToLex:
    handler: handler.telegramToLex_handler  # Nome da função handler e seu respectivo método
    timeout: 30  # Timeout da função (em segundos)
    events:
      - httpApi:
          path: /telegram-webhook  # Caminho do webhook para receber a requisição
          method: post  # Método HTTP para a requisição
